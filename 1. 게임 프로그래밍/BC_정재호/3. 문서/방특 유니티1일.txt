유니티를 활용하기 위해 c#을 배워야 할 필요가 있다. 그래서 우선 c#문법을 공부해보도록 한다.




<c#에서 콘솔 창에 문자열 입력 출력 하기 >
Console.WriteLine(); // 매개 변수로 전달 받은 문자열 출력
Console.ReadLine(); //콘솔에서 입력받은 문자열을 반환


string 자료형에 문자열을 저장할 수 있지만 정수형으로 바로 변형이 불가능하기 때문에 따로 변형 문장을 작성해야 한다.


<문자열 정수로 변환>
string sAge = Console.ReadLine();
int nAge = convert.ToInt32(sAge); // 또는 Age = int.Parse(sAge);
Console.WriteLine(Age);        //정상적으로 정수 출력 가능




<WriteLine 함수에 대한 분석>
매개변수로 입력받은 문자열을 출력하고 나면 자동으로 줄을 바꾼다.
추가로 c언어에서 사용하는 줄바꿈문자 \n을 사용하면 문자열 안에서도 자유롭게 줄을 바꿀 수 있다. 문제는 첫번째로 언급한 정보인데 자동으로 줄바꿈을 해줌으로 원하는 위치에 문자를 입력 받기 힘들가 그래서 새로운 문자열 출력 함수를 찾아야 한다.


 방법 : console.writeline() 대신 console.write()를 사용하면 자동 줄 바꿈이 실행되지 않는다.
https://cocomo.tistory.com/462


<c#에서 클래스 안에서 함수 정의 할때 반환형으로 static을 선언하는 이유>




<랜덤 함수와 자료형>
Random 자료형에 랜덤 값 관련 함수들이 많이 선언되어 있다.
Random.Next(int a, int b); // a~b-1 값들 중 하나를 랜덤으로 반환한다. 


a= 1이고 b=3일 경우 1~2 범위 의 값 중 하나를 랜덤으로 출력한다.


Random함수를 사용할때 변수를 생성해야 하는 이유, c언어로 랜덤 함수를 사용해본 경우라면 이해하기 쉽다. 
컴퓨터는 100% 랜덤한 수를 반환할 수 없다. 기초가 되는 데이터가 필요한데 그 값은 항상 값다. 때문에 c언어로 랜덤 함수를 사용할 때 매번 바뀌는 값인 시간 값을 시드로 저장해 기초 데이터를 만들어 둔다. 이것과 동일하게 Random자료형의 변수를 선언하고 새롭게 초기화 하는 이유는 이 시드값을 시간값으로 저장하기 위한 수단이다. c언어에서는 불편하게 직접 초기화 했다면 c#에서는 어느정도 편리하게 함수로 미리 만들어 두었다.