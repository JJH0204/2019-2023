#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <Windows.h>
#include <conio.h>


void gotoxy(int x, int y) {
	COORD Cur;
	Cur.X = x;
	Cur.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Cur);
}

int blocks[7][4][4][4]={
	//네모
{{0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},
 {0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0}},
 //막대기
{{0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0},{0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0},
 {0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0},{0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0}},
 //ㄹ막대기
{{0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0},
 {0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0},{0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0}},
 //ㄹ뒤집은 막대기
{{0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0},
 {0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0}},
 //ㄴ막대기
{{0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,0},{0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0},
 {0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0},{0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0}},
 //ㄴ뒤집은 막대기
{{0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0},
 {0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0},{0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0}},
 //T 자 막대
{{0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0},
 {0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0},{0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0}}
};

int arr[4][4];

int b_type; // 블록 종류 저장
int b_rotation; // 블록 회전 값 저장
int b_type_next; // 다음 블록 값 저장

int bx, by; //이동중인 블록의 위치 좌표를 저장

void new_block(void); //새로운 블록을 하나 만든다.
int check_crush(int bx, int by, int rotaiton); //bx, by 위치에 rotation회전 값을 같는 경우 충돌 판단
void move_block(int dir); //dir방향으로 블록을 움직임
void check_line(void); //줄이 가득 찼는지 확인

int main(void) {
	int n = 0;
	srand(time(NULL));
	while (n < 5) {
		new_block();
		n++;
	}
	return 0;
}

void new_block(void) {
	int i, j;
	int y = 0;

	b_type = b_type_next;
	b_type_next = rand() & 7;
	b_rotation = 0;

	for (i = 0; i < 4; i++) {
		for (j = 0; j < 4; j++) {
			if (blocks[b_type][b_rotation][i][j] == 1) {
				arr[i][j] = 1;
			}
			else {
				arr[i][j] = 0;
			}
		}
	}
	while (1) {
		int n;
		for (n = 0; n <= y; n++) { printf("\n"); }
		for (i = 0; i < 4; i++) {
			for (j = 0; j < 4; j++) {
				if (arr[i][j] == 1) {
					printf("■");
				}
				else {
					printf("  ");
				}
				
			}
			printf("\n");
		}
		
		Sleep(1000);
		system("cls");
	}
}